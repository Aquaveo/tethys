image: docker:git

stages:
  - Lint
  - Build
  - Test

before_script:
  # Set up ssh-agent for use when checking out other repos
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" > key
  - chmod 600 key
  - ssh-add key
  - ssh-add -l
  # Add known host keys
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'

Lint:
  image: python:3.7
  stage: Lint
  script:
    - pip install flake8
    - flake8 .

.kaniko_prep: &kaniko_prep
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

Build:
  stage: Build
  <<: *kaniko_prep
  artifacts:
    paths:
      - $CI_PROJECT_DIR/${CI_PROJECT_PATH_SLUG}.tar
    expire_in: 3 hours
  script:
    - /kaniko/executor
        --context $CI_PROJECT_DIR
        --dockerfile $CI_PROJECT_DIR/Dockerfile
        --destination $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}-dev
        --tarPath $CI_PROJECT_DIR/${CI_PROJECT_PATH_SLUG}.tar
        --cache
        --cache-repo $CI_REGISTRY_IMAGE/cache
  except:
    - tags

"Build and Push":
  stage: Build
  <<: *kaniko_prep
  script:
    - /kaniko/executor
        --context $CI_PROJECT_DIR
        --dockerfile $CI_PROJECT_DIR/Dockerfile
        --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
        --destination $CI_REGISTRY_IMAGE:latest
        --cache
        --cache-repo $CI_REGISTRY_IMAGE/cache
  only:
    - tags

Test:
  stage: Test
  script:
    # Import build
    - docker load -i ${CI_PROJECT_PATH_SLUG}.tar
    # Setup
    - docker rm -f tethys_core tethys_postgis || true
    # Run dependencies
    - docker run -d --name tethys_postgis -p 5432:5432 -e POSTGRES_PASSWORD='pass' mdillon/postgis
    - echo "wait for container to start up..."
    - sleep 60s
    - docker logs tethys_postgis
    # Run
    - >
        docker run -d --name tethys_core
        -e ALLOWED_HOSTS="\"['localhost', '127.0.0.1']\""
        -e TETHYS_PUBLIC_HOST='172.17.0.1'
        -e POSTGRES_PASSWORD='pass'
        -e TETHYS_DB_HOST='172.17.0.1'
        -e TETHYS_DB_PORT='5432'
        -e TETHYS_DB_USERNAME='tethys_super'
        $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}-dev
    - echo "wait for container to start up..."
    - sleep 300s
    - docker logs tethys_core
    - echo "Settings:"
    - docker exec tethys_core /bin/bash -c "cd /usr/lib/tethys/tethys/tethys_portal && cat settings.py"
    - echo "Python Environment:"
    - docker exec tethys_core /bin/bash -c ". /opt/conda/bin/activate tethys; conda list"
    - docker exec tethys_core /bin/bash -c ". /opt/conda/bin/activate tethys; pip list"
    # Unit Tests
    - docker exec tethys_core /bin/bash -c ". /opt/conda/bin/activate tethys && tethys test -cu"
    # Clean up
    - docker rm -f tethys_core tethys_postgis || true
  tags:
    - docker
  except:
    - tags
