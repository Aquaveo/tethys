# Build and Test Tethys Platform on Travis
language: c

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# Turn off email notifications
notifications:
  email: false

os:
  - linux

services:
  - docker

jobs:
  include:
#    - stage: test
#      name: "Tethys Unit Tests"
#      # Run on every commit to master, pull requests to master, and tag
#      # TODO: Replace automated_deployment with master
#      if: (branch = automated_deployment) OR ((type = pull_request) AND (branch = automated_deployment)) OR (tag IS present)
#      install:
#        - cd ..
#        - mv tethys src
#        - bash ./src/scripts/install_tethys.sh -h
#        - bash ./src/scripts/install_tethys.sh --partial-tethys-install mesdat -t $PWD
#
#        # activate conda environment
#        - export PATH="$PWD/miniconda/bin:$PATH"
#        - source activate tethys
#        - conda list
#
#        # start database server
#        - pg_ctl -U postgres -D "${TETHYS_DB_DIR}/data" -l "${TETHYS_DB_DIR}/logfile" start -o "-p ${TETHYS_DB_PORT}"
#
#        # generate new settings.py file with tethys_super user for tests
#        - rm ./src/tethys_portal/settings.py
#        - tethys gen settings --db-username tethys_super --db-password pass --db-port ${TETHYS_DB_PORT}
#
#        # install test dependencies
#        - pip install python-coveralls
#        - pip install -e $TETHYS_HOME/src/[tests]
#
#        # install test apps and extensions
#        - pushd ./src/tests/extensions/tethysext-test_extension
#        - python setup.py develop
#        - popd
#
#        - pushd ./src/tests/apps/tethysapp-test_app
#        - python setup.py develop
#        - popd
#
#      # command to run tests
#      script:
#        - tethys test -c -u
#
#      # generate test coverage information
#      after_success:
#        - ls -al
#        - coveralls
    - stage: build
      name: "Build Tethys"
      if: (branch = automated_deployment) OR (tag IS present)
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - if [ -n "$TRAVIS_TAG"]; then docker build -t tethysplatform/tethys-core:$TRAVIS_BRANCH; export LATEST_TAG="latest"; else export LATEST_TAG="dev"; fi
        - docker build -t tethysplatform/tethys-core:$LATEST_TAG .
      deploy:
        provider: script
        script:
          - if [ -n "$TRAVIS_TAG"]; then docker push tethysplatform/tethys-core:$TRAVIS-BRANCH; fi
          - docker push tethysplatform/tethys-core:$LATEST_TAG
        on:
          branch: automated_deployment
