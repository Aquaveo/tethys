#
language: c

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# Turn off email notifications
notifications:
  email: false

env:
  - PYTHON_VERSION="2"
  - PYTHON_VERSION="3"

os:
  - linux
  - osx

stages:
  - "Migrate Database"
  - name: test
    if: branch = master  # TODO: REMOVE THIS

install:
  # If this is a database migration test get the latest on the release branch
  - if [ ! -z "$DB_MIGRATION_BUILD" ]; then echo "PRE-CHECKOUT RELEASE MIGRATIONS"; ls ./src/*/migrations  fi
  - if [ ! -z "$DB_MIGRATION_BUILD" ]; then git fetch --unshallow; git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"; git fetch --all; git branch -r; git reset --hard origin/release; fi
  - if [ ! -z "$DB_MIGRATION_BUILD" ]; then cd scripts; rm install_tethys.sh; wget https://raw.githubusercontent.com/tethysplatform/tethys/master/scripts/install_tethys.sh; chmod +x install_tethys.sh; cd ../; fi
  # Run install script
  - cd ..
  - mv tethys src
  - if [ ! -z "$DB_MIGRATION_BUILD" ]; then echo "PRE-INSTALL MIGRATIONS"; ls ./src/*/migrations  fi
  - bash ./src/scripts/install_tethys.sh -h
  - bash ./src/scripts/install_tethys.sh --partial-tethys-install mesdiat -t $PWD --python-version $PYTHON_VERSION

  # activate conda environment
  - export PATH="$PWD/miniconda/bin:$PATH"
  - source activate tethys
  - conda list

  # start database server
  - pg_ctl -U postgres -D "${TETHYS_DB_DIR}/data" -l "${TETHYS_DB_DIR}/logfile" start -o "-p ${TETHYS_DB_PORT}"

  # generate new settings.py file with tethys_super user for tests
  - rm ./src/tethys_portal/settings.py
  - tethys gen settings --db-username tethys_super --db-password pass --db-port ${TETHYS_DB_PORT}

  # install test dependencies
  - pip install python-coveralls
  - pip install -e $TETHYS_HOME/src/[tests]

  # install test apps and extensions
  - pushd ./src/tests/extensions/tethysext-test_extension
  - python setup.py develop
  - popd

  - pushd ./src/tests/apps/tethysapp-test_app
  - python setup.py develop
  - popd

script:
  - tethys test -c -u

after_success:
  - ls -al
  - coveralls

jobs:
  include:
    - stage: "Migrate DB"
      env:
        - DB_MIGRATION_BUILD="TRUE"
        - PYTHON_VERSION="3"
      os:
        - linux
      script:
        - echo "PRE-RESET MIGRATIONS"
        - ls ./src/*/migrations
        - git reset --hard $TRAVIS_BRANCH
        - tethys manage syncdb
        - echo "POST SYNCDB MIGRATIONS"
        - ls ./src/*/migrations
