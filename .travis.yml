# Build and Test Tethys Platform on Travis
language: c

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# Turn off email notifications
notifications:
  email: false

os:
  - linux
  - osx

services:
  - docker

stages:
  - name: test
#    if: (branch = master) OR ((type = pull_request) AND (branch = master)) OR (tag IS present)
  - name: build
#    if: (branch = master) OR (tag IS present)

install:
  - cd ..
  - bash ./tethys/scripts/install_tethys.sh -h
  - bash ./tethys/scripts/install_tethys.sh --partial-tethys-install me -t $PWD

  # activate conda environment
  - . ~/miniconda/etc/profile.d/conda.sh
  - conda activate tethys
  - conda list

  # generate new settings.py file with tethys_super user for tests
  - tethys gen settings --db-username tethys_super --db-password pass --db-port 5436

  # start database server
  - tethys db configure

  # install test dependencies
  - pip install python-coveralls

# command to run tests
script:
  - tethys test -c -u -v 2

# generate test coverage information
after_success:
  - ls -al
  - coveralls

jobs:
  include:
    - stage: build
      install:
        - skip
      script:
        - if [ -z "$TRAVIS_TAG"]; then export LATEST_TAG="master" \
            ; else export LATEST_TAG="latest" \
            ; docker build . -t tethysplatform/tethys-core:$TRAVIS_TAG -t tethysplatform/tethys-core:$TRAVIS_TAG \
            ; echo "Branch tag is $TRAVIS_TAG and Main tag is $LATEST_TAG"; fi
        - echo "Main tag is $LATEST_TAG"
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - if [ -z "$TRAVIS_TAG"]; then echo "No Branch tag is Present" \
            ; else docker push tethysplatform/tethys-core:$TRAVIS_TAG; fi
        - docker push tethysplatform/tethys-core:$LATEST_TAG
