# Tethys Main CI
name: Tethys-CI

# Only run on tags.
on:
  push:
    tags:
      - "*"

env:
  CONDA_BUILD_PIN_LEVEL: minor

jobs:
  docker-build:
    name: Docker Build (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.7]
    steps:
      # Checkout the source
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Parse version parts from tag
      - name: Parse version from tag
        id: version
        uses: release-kit/semver@v1
      # Test version parser
      - name: Use parsed version
        run: |
          echo "${{ steps.version.outputs.major }}"
          echo "${{ steps.version.outputs.minor }}"
          echo "${{ steps.version.outputs.patch }}"
          echo "${{ steps.version.outputs.prerelease }}"
          echo "${{ steps.version.outputs.build }}"
          echo "${{ steps.version.outputs.full }}"
          echo "${{ steps.version.outputs.tag }}"
      # Build the docker with version tag
      - name: Build With Tag
        run: |
          docker build -t ${{ secrets.DOCKER_UPLOAD_URL }}:${{ steps.version.outputs.full }} .;
      # Tag with latest
      - name: Tag with Latest
        if: ${{ steps.version.outputs.prerelease != '' }}
        run: |
          docker tag ${{ secrets.DOCKER_UPLOAD_URL }}:${{ steps.version.outputs.full }} ${{ secrets.DOCKER_UPLOAD_URL }}:latest;
      # Upload docker
      - name: Upload Docker With Tag
        run: |
          echo "Pushing to docker registry";
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin;
          # docker push ${{ secrets.DOCKER_UPLOAD_URL }}:${{ steps.version.outputs.full }};
      - name: Upload Docker With Latest
        if: ${{ steps.version.outputs.prerelease != '' }}
        run: |
          echo "Updating latest on the docker registry";
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin;
          # docker push ${{ secrets.DOCKER_UPLOAD_URL }}:latest;

  conda-build:
    name: Conda Build (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.7]
    steps:
      # Checkout the source
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Setup Tethys
      - name: Setup Tethys
        run: |
          cd ..
          bash ./tethys/scripts/install_tethys.sh --partial-tethys-install me -n tethys -s $PWD/tethys
          . ~/miniconda/etc/profile.d/conda.sh
          conda activate tethys
          hash -r
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda install conda-build anaconda-client
          conda config --set anaconda_upload no
          mkdir -p ~/conda-bld
      # Export Conda Build Path
      - name: Set Conda Build Path
        uses: allenevans/set-env@v2.0.0
        with:
          CONDA_BLD_PATH: "/home/runner/conda-bld"
      # Generate Conda Recipe With Constrained Dependencies
      - name: Generate Conda Recipe
        run: |
          cd ..
          . ~/miniconda/etc/profile.d/conda.sh;
          conda activate tethys;
          tethys gen metayaml -p minor --overwrite;
      # Show Tethys Meta
      - name: Show Tethys Meta
        run: |
          cd ..
          cat ./tethys/conda.recipe/meta.yaml
      # Build Conda
      - name: Build Conda
        run: |
          cd ..
          . ~/miniconda/etc/profile.d/conda.sh;
          conda activate tethys;
          conda build -c tethysplatform -c conda-forge ./tethys/conda.recipe
      # Upload Conda No Pull Request With Tag
      - name: Upload Conda With Tag
        run: |
          cd ..
          . ~/miniconda/etc/profile.d/conda.sh;
          conda activate tethys;
          # anaconda -t "${{ secrets.CONDA_UPLOAD_TOKEN }}" upload -u ${{ secrets.CONDA_UPLOAD_USER }} $CONDA_BLD_PATH/noarch/tethys-platform*.tar.bz2 --force;
